/* SORTING */
class Solution {
    public int maxWidthOfVerticalArea(int[][] points) {
        Arrays.sort(points, (a, b) -> Integer.compare(a[0], b[0]));    //Sort the matrix based on the values in the first column
        int maxarea=0;
        for(int i=1;i<points.length;i++){
            maxarea = Math.max(maxarea, points[i][0]-points[i-1][0]);  //note all points are I Q (constraints)
        }
        return maxarea;
    }
}

/*
LOGIC---
For vertical area what only matters is x coordinate.
And we want two x-points that are farthest away without any other point lying between them.
The diffenrece between them will be their area.

So, if we have an array of point of absciassa - {1,2,42,4,8,6}
First we can sort the abscissa since they will be placed on graph accordingly.
X points= >{1,2,4,6,8,42}
Now max vertical area can be consdier with no points betwene them the adjacent differneces of neighbouring elemnts.
Just find the max of this differnece that will be our answer.
*/
