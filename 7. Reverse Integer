//LEETCODE PROBLEM
//LEVEL - MEDIUM
//7. Reverse Integer

/* JAVA PROGRAM */
class Solution {
    public int reverse(int x) {       
      int temp = x;
      long rev = 0; //by using long we make sure to not allow overflow or underflow in start
         
        while(temp!=0)  //for both negative and poistive number the reverse process hapepns
        {
            rev=10*rev+ temp%10;
            temp=temp/10;
        }
        if(rev==(int)rev)   //this condition makes sure there has been no overflow
            return (int)rev;    //print output in required data type
        else
            return 0;
    }
}


/* C++ PROGRAM */
class Solution
{
public:
    int reverse(int x)
    {
        int ans = 0;
        while (x != 0){
            int digit = x % 10;
            if (ans > INT_MAX / 10 | ans < INT_MIN / 10) return 0;  //we are using divide to make sure that if we had proceed with the next step the int will overlow
            else{
                ans = ans * 10 + x % 10;
                x /= 10;
            }
        }
        return ans;
    }
};


/*
Note in above solution, the ans variable is multiplied everytime by 10, but we need to make sure that before we multiply it by 10 it does not crosses int limit. So check.
*/

/* 
We can aslo use the JAVA program logic in the c++ program using long. But sinc ethe quest has asked us to make sure that reverse is not 64 but 32 so stick with int.
*/
