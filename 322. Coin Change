class Solution {
    public int coinChange(int[] coins, int amt){
        int dp[][] = new int[13][10001];
        for(int row[] : dp) Arrays.fill(row, -1);
        int ans=solve(coins, amt, 0, dp);
        if(ans>=10000000)return -1;
        return ans;
    }

    public int solve(int coins[], int amt, int i, int dp[][]){
        if(amt==0) return 0;
        if(i>=coins.length || amt<0) return 10000000;
        if(dp[i][amt]!=-1) return dp[i][amt];
        int not_take=solve(coins,amt,i+1, dp);
        int take=10000000;
        if(coins[i]<=amt){
            take=1+solve(coins,amt-coins[i],i, dp);
        }

        return dp[i][amt] = Math.min(take, not_take);
    }
}
