

LOGIC
Note : The largest permutation(array in descending order) will have no next permutation. In that case we will return the first starting permutation. that is the array in ascending order.
eg :arr=[1,3,5,4,2] ===> Algorithm
Step1: Travel backward from right to left till you reach - a[i]<a[i+1]. So we get i=1;
Step2: Again travel backward from righ to left and find index where a[i]



/* ONE LINER C++ SOLUTION - USING STL */
class Solution {
public:
    void nextPermutation(vector<int>& nums) {
        next_permutation(nums.begin(), nums.end());  //using STL, it directly makes it next permutation
        //return nums;
        for(int i=0;i<nums.size();i++){
            cout<<nums[i];
        }
    }
};

LOGIC - next_permutation(nums.begin(), nums.end());
