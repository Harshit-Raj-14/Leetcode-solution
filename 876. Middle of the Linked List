/* FAST AND SLOW POINTER O(n/2) */
class Solution {
    public ListNode middleNode(ListNode head) {
        ListNode slow = head;
        ListNode fast = head;
        while(fast!=null && fast.next!=null){
            slow=slow.next;
            fast=fast.next.next;
        }
        return slow;
    }
}

/* O(2n) */
class Solution {
    public ListNode middleNode(ListNode head) {
        int len=0;
        ListNode curr = head;
        while(curr!=null){
            len++;
            curr=curr.next;
        }
        int mid=len/2;
        curr=head;
        while(mid-->0){
            curr=curr.next;
        }
        return curr;
    }
}
