/* MY OWN FIRST ATTEMPT TWO POINTER APPROACH */
class Solution {
    public String reverseWords(String s) {
        s.trim();
        StringBuilder sb = new StringBuilder("");
        String ans="";
        for(int i=0, j=0;i<s.length();i++){
            while(i<s.length() && s.charAt(i)==' '){
                i++;
            }
            j=i;
            int startofstring=i;
            while(j<s.length() && s.charAt(j)!=' '){
                j++;
            }
            int endofstring=j;
            ans = " "+ s.substring(startofstring, endofstring) + ans;
            i=j;
        }
        return ans.trim();
    }
}


/*
USED TWO POINTER APPROACH---
One iterates over white spaces
and other iterates over character

and keep on making  acharacter in a  smart way
ans = " " + new word + ans;
*/

HOW TO MAKE IT MORE ELEGANT---
We needed a smart way to add new words becuase we are travelling from front but need to add it back
Instead why don't you travel form back so, you can directly add it in front of ans this way.

also, you are looping over empty spaces when you cna just leave it at that and let the mail for loop handle it for you 


/* ELEGANT SOLUTION */
class Solution {
    public String reverseWords(String s) {
        s.trim();
        StringBuilder sb = new StringBuilder("");
        for(int i=s.length()-1;i>=0;i--){
            while(i>=0 && s.charAt(i)==' '){    //moving forward over empty faces
                i--;
            }
            int endofstring=i;
            while(i>=0 && s.charAt(i)!=' '){    //moving forward over characters
                i--;
            }
            int startofstring=i;
            String word = s.substring(startofstring+1, endofstring+1);
            sb.append(word);
            sb.append(" ");
        }
        return sb.toString().trim();
    }
}

