/* WRONG FAILED APPROACH ITERATION FROM BACK OF A SORTED ARRAY */
class Solution {
    public int coinChange(int[] coins, int amount) {
        Arrays.sort(coins);
        int i=coins.length-1;    //iteration in coins
        int ans=0;  //no of coins needed
        while(amount!=0){
            if(amount>=coins[i]){
                amount-=coins[i];
                ans++;
            }
            else i--;
            if(amount<0 || i<0) return -1;
        }
        return ans;
    }
}

The problem with this code, is it tries to be greedy and fails to consider each possibility. Because we are subtractign all larger number from the back. 
We reach a minimum. But what if two numbers adding from front would have worked isntead takign the higher number form back.
Example :
Input: coins =[186,419,83,408], amount =6249
Output: -1
Expected: 20
