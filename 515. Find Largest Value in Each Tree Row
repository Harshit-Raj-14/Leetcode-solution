/* BFS 0(n) SOLUTION */
class Solution {
    public List<Integer> largestValues(TreeNode root) {
        ArrayList<Integer> list = new ArrayList<>();
        if(root==null) return list;
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        while(q.size()!=0){
            int noofnodesatthatlevel=q.size();
            int max=Integer.MIN_VALUE;
            for(int i=0;i<noofnodesatthatlevel;i++){
                TreeNode curr = q.poll();
                max=Math.max(max, curr.val);
                if(curr.left!=null) q.add(curr.left);
                if(curr.right!=null) q.add(curr.right);
            }
            list.add(max);
        }
        return list;
    }
}
