/* O(t) */
class Solution {
    public int passThePillow(int n, int t) {
        int i=1;
        boolean forward = true;
        while(t-->0){
            if(i==n) forward=!forward;
            if(i==1 && forward==false) forward=!forward; 
            if(forward) i++;
            else i--;
        }
        return i;
    }
}


/* O(1) */
class Solution {
    public int passThePillow(int n, int time) {
        // Calculate the number of complete rounds of pillow passing
        int fullRounds = time / (n - 1);
        // Calculate the remaining time after complete rounds
        int extraTime = time % (n - 1);
        // Determine the position of the person holding the pillow
        // If fullRounds is even, the pillow is moving forward.
        // If fullRounds is odd, the pillow is moving backward.
        if (fullRounds % 2 == 0) {
            return extraTime + 1; // Position when moving forward
        } 
        else {
            return n - extraTime; // Position when moving backward
        }
    }
}
