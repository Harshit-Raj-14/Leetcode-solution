class Solution {
    public boolean halvesAreAlike(String s){
        int count1=0;
        for(int i=0;i<s.length()/2;i++){
            char c = s.charAt(i); 
            if(c=='a'||c=='e'||c=='i'||c=='o'||c=='u') count1++;
            else if(c=='A'||c=='E'||c=='I'||c=='O'||c=='U') count1++;
        }
        int count2=0;
        for(int i=s.length()/2;i<s.length();i++){
            char c = s.charAt(i); 
            if(c=='a'||c=='e'||c=='i'||c=='o'||c=='u') count2++;
            else if(c=='A'||c=='E'||c=='I'||c=='O'||c=='U') count2++;
        }
        if(count1==count2) return true;
        else return false;
    }
}

/*
LOGIC---
A string can be divided into two equal parts.
This alike is based on having equal number of vowels in each parts.

Hence, count number of vowels in each half.
If equal count => true
else => false
*/


/* ELEGANT CODE */
class Solution {
    public boolean halvesAreAlike(String s){
        int count1=0;
        int count2=0;
        for(int i=0;i<s.length()/2;i++){
            char c = s.charAt(i); 
            if(c=='a'||c=='e'||c=='i'||c=='o'||c=='u') count1++;
            else if(c=='A'||c=='E'||c=='I'||c=='O'||c=='U') count1++;
            char C = s.charAt(s.length()-i-1); 
            if(C=='a'||C=='e'||C=='i'||C=='o'||C=='u') count2++;
            else if(C=='A'||C=='E'||C=='I'||C=='O'||C=='U') count2++;
        }
        if(count1==count2) return true;
        else return false;
    }
}
