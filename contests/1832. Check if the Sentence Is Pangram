/* O(n) HASHING */
class Solution {
    public boolean checkIfPangram(String sentence) {
        int count[] = new int[26];
        for(int i=0;i<sentence.length();i++){
            count[sentence.charAt(i)-'a']++;
        }
        for(int i=0;i<count.length;i++){
            if(count[i]==0) return false;
        }
        return true;
    }
}


/* O(n) USING HASHSET */
class Solution {
    public boolean checkIfPangram(String sentence) {
        HashSet<Character> set = new HashSet<>();
        for(int i=0;i<sentence.length();i++){
            set.add(sentence.charAt(i));
        }
        if(set.size()==26) return true;
        else return false;
    }
}



/* O(26n) Find letters one by one */
class Solution {
    public boolean checkIfPangram(String sentence) {
        for(int i=0;i<26;i++){
            char currChar=(char)('a'+i);
            if(sentence.indexOf(currChar)==-1) return false;
        }
        return true;
    }
}
