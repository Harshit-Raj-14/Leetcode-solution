class Solution {
    public int maxLengthBetweenEqualCharacters(String s){
        HashMap<Character, Integer> map = new HashMap<>();
        for(int i=0;i<s.length();i++){  //storing first occurence of each character
            if(!map.containsKey(s.charAt(i))) map.put(s.charAt(i), i);
        }
        int maxdiff=-1;
        for(int i=0;i<s.length();i++){
            if(map.get(s.charAt(i))!=i){   //not taking the first occurence itself as duplicate
                int currdiff = Math.abs(map.get(s.charAt(i))-i) -1; //we do -1 to not consider duplicate
                maxdiff=Math.max(maxdiff, currdiff);
            }
        }
        return maxdiff;
    }
}

/*
LOGIC---
First store all the first occurences of all the letter in a map.
Then loop through string, find differnece between the first occurence avialble in map and while looping.
Keep tab on max differnece and that will be the length of substring.
*/
