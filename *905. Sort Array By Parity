/* TC - O(n) & SC - O(n) */
class Solution {
    public int[] sortArrayByParity(int[] nums) {
        ArrayList<Integer> even = new ArrayList<>();
        ArrayList<Integer> odd = new ArrayList<>();
        for(int i=0;i<nums.length;i++){
            if(nums[i]%2==0) even.add(nums[i]);
            else odd.add(nums[i]);
        }
        int ans[] = new int[nums.length];
        int index=0;
        for(int i=0;i<even.size();i++){
            ans[index]=even.get(i);
            index++;
        }
        for(int i=0;i<odd.size();i++){
            ans[index]=odd.get(i);
            index++;
        }
        return ans;
    }
}

LOGIC ---
store even and odd eleemtns seperately in differnet list nad finally add them to an answer array

/* SAME AS ABOVE TC - O(n) & SC - O(n) */ 
class Solution {
    public int[] sortArrayByParity(int[] A) {
        int[] ans = new int[A.length];
        int t = 0;

        for (int i = 0; i < A.length; ++i)
            if (A[i] % 2 == 0)
                ans[t++] = A[i];

        for (int i = 0; i < A.length; ++i)
            if (A[i] % 2 == 1)
                ans[t++] = A[i];

        return ans;
    }
}

LOGIC --- Write all the even elements first, then write all the odd elements.
