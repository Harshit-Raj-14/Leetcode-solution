/* USING HASHSET */
class Solution {
    public int longestCommonPrefix(int[] arr1, int[] arr2) {
        HashSet<String> set = new HashSet<>();
        for(int i=0;i<arr1.length;i++){
            String s = Integer.toString(arr1[i]);
            for(int j=0;j<s.length();j++){
                set.add(s.substring(0,j+1));    //putting all prefixes of arr1 in set
            }
        }
        int ans=0;
        for(int i=0;i<arr2.length;i++){
            String s = Integer.toString(arr2[i]);
            for(int j=0;j<s.length();j++){
                if(set.contains(s.substring(0,j+1))){   //checking which prefix of arr1 is also there in arr2 through set
                    ans=Math.max(ans, j+1);
                }
            }
        }
        return ans;
    }
}

/*
LOGIC---
Put all the possible prefixes of each element in arr1 into a HashSet.
For all the possible prefixes of each element in arr2, check if it exists in the HashSet.
*/
