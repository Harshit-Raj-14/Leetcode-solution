/* MONOTONIC SQUARE O(n) */
class Solution {
    public int[] finalPrices(int[] prices){
        int ans[] = prices.clone();
        Stack<Integer> stack = new Stack<>();
        int idx=0;
        for(int i=0;i<prices.length;i++){
            while(!stack.isEmpty() && prices[i]<=prices[stack.peek()]){
                ans[stack.pop()] -= prices[i]; //apply discount
            }
            stack.add(i);
        }
        return ans;
    }
}


/* BRUTE FORCE O(n^2) */
class Solution {
    public int[] finalPrices(int[] prices){
        int ans[] = new int[prices.length];
        for(int i=0;i<prices.length;i++){
            int j=i+1;
            while(j<prices.length && prices[j]>prices[i]) j++;
            if(j<prices.length) ans[i]=prices[i]-prices[j];
            else ans[i]=prices[i];
        }
        return ans;
    }
}
